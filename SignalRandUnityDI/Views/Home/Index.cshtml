@model SignalRandUnityDI.Models.IndexViewModel

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>SignalR Sample</h1>

	<p>Click Total: <div id="clickTotal">@Model.ClickTotal</div></p>

	<input id="addToClickTotal" class="btn btn-default" type="button" value="Add to Click Total" />

</div>


@section scripts {
	<!--Script references. -->
	<!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
	<!--Reference the SignalR library. -->
	<script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>

	<!--Reference the autogenerated SignalR hub script.-->
	<script src="~/signalr/hubs"></script>

	<!--SignalR script to update the chat page and send messages.-->

	<script>
		// Possibly store some global structure that keeps track of the data in the view.

		$(function () {

			// Reference the auto-generated proxy for the hub.
			var indexHub = $.connection.IndexHub;

			WireUpStatusClient(indexHub);

			// Start the connection.
			$.connection.hub.start().done(function () {

				// Set up the client so the CLIENT can CALL the SERVER (needs do be done AFTER the hub is started on the client)

				WireUpStatusCommands(indexHub);
			});
		});

		// This optional function html-encodes messages for display in the page.
		function htmlEncode(value) {
			var encodedValue = $('<div />').text(value).html();
			return encodedValue;
		}

		function WireUpStatusClient(indexHub) {
			console.log('Called WireUpStatusClient(' + indexHub + ')');

			// Set up the client methods for the server to call (callbacks)

			// Create a function that the hub can call back to display messages.
			indexHub.client.refreshClickCount = function (clickCount) {

				console.log('Called indexHub.client.refreshClickCount(' + clickCount + ')');

				// Look for the ID.

				var clickTotal = $('#clickTotal');

				// TODO: If the ID was found, then update it otherwise add it.

				// Update the div's text.
				clickTotal.text(clickCount);
			};
		}

		function WireUpStatusCommands(indexHub) {

			// Set up the client so the CLIENT can CALL the SERVER

			// When user clicks the "TEST Notify Client" button
			$('#addToClickTotal').click(function () {

				// Call the server's AddToClickTotal method on the hub.
				indexHub.server.AddToClickTotal();

				console.log('Called addToClickTotal.click() command.');
			});
		}

	</script>
}
